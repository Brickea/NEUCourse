-- MySQL Script generated by MySQL Workbench
-- Fri Mar 27 16:42:56 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`customer` (
  `idcustomer` INT NOT NULL,
  `userName` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `isdisable` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`idcustomer`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`device`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`device` (
  `iddevice` INT NOT NULL,
  `idcustomer` INT NOT NULL,
  `deviceTpye` VARCHAR(45) NOT NULL,
  `NumConnectionsAvailable` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`iddevice`),
  INDEX `idcustomerOwnDevice_idx` (`idcustomer` ASC),
  CONSTRAINT `idcustomerOwnDevice`
    FOREIGN KEY (`idcustomer`)
    REFERENCES `mydb`.`customer` (`idcustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`building`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`building` (
  `idbuilding` INT NOT NULL COMMENT 'This table will store building information. Like name, address',
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(128) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`idbuilding`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`floorMap`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`floorMap` (
  `idfloorMap` INT NOT NULL COMMENT 'This table will store the excel file for floor data',
  `idbuilding` INT NOT NULL,
  `floorNumber` INT NOT NULL,
  `excelMap` BLOB NOT NULL,
  `ifupdate` INT NOT NULL,
  PRIMARY KEY (`idfloorMap`),
  INDEX `idbuildingIndicateWhichBuilding_idx` (`idbuilding` ASC),
  CONSTRAINT `idbuildingIndicateWhichBuilding`
    FOREIGN KEY (`idbuilding`)
    REFERENCES `mydb`.`building` (`idbuilding`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`floorMapPoints`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`floorMapPoints` (
  `coordinatePoint` INT NOT NULL COMMENT 'This table will store the ',
  `idfloorMap` INT NOT NULL,
  `x` DECIMAL(45) NOT NULL,
  `y` DECIMAL(45) NOT NULL,
  `ifpassable` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`coordinatePoint`),
  INDEX `idpointsBelongtoWhichFloor_idx` (`idfloorMap` ASC),
  CONSTRAINT `idpointsBelongtoWhichFloor`
    FOREIGN KEY (`idfloorMap`)
    REFERENCES `mydb`.`floorMap` (`idfloorMap`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`location` (
  `idlocation` INT NOT NULL,
  `coordinatePoint` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`idlocation`),
  INDEX `coordinatePoint_idx` (`coordinatePoint` ASC),
  CONSTRAINT `coordinatePoint`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`navigationRequest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`navigationRequest` (
  `idnavigationRequest` INT NOT NULL,
  `iddevice` INT NOT NULL,
  `idlocation` INT NOT NULL,
  `ifcomplete` TINYINT NOT NULL DEFAULT 0,
  `ifdifferentFloor` TINYINT NOT NULL DEFAULT 0,
  `strategy` VARCHAR(45) NOT NULL,
  `recommendation` VARCHAR(45) NULL,
  PRIMARY KEY (`idnavigationRequest`),
  INDEX `idDestination_idx` (`idlocation` ASC),
  INDEX `idforDevice_idx` (`iddevice` ASC),
  CONSTRAINT `idforDevice`
    FOREIGN KEY (`iddevice`)
    REFERENCES `mydb`.`device` (`iddevice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idDestination`
    FOREIGN KEY (`idlocation`)
    REFERENCES `mydb`.`location` (`idlocation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`deviceCurrentPosition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`deviceCurrentPosition` (
  `iddevice` INT NOT NULL,
  `coordinatePoint` INT NOT NULL,
  INDEX `iddevice_idx` (`iddevice` ASC),
  PRIMARY KEY (`iddevice`),
  INDEX `calculatedPoint_idx` (`coordinatePoint` ASC),
  CONSTRAINT `iddevice`
    FOREIGN KEY (`iddevice`)
    REFERENCES `mydb`.`device` (`iddevice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `calculatedPoint`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`shortestPath`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`shortestPath` (
  `idshortestPath` INT NOT NULL,
  `idnavigationRequest` INT NOT NULL,
  `coordinatePoint` INT NOT NULL COMMENT 'Only store current path',
  INDEX `idpathforDevice_idx` (`idnavigationRequest` ASC),
  INDEX `pathpointforshortest_idx` (`coordinatePoint` ASC),
  PRIMARY KEY (`idshortestPath`),
  CONSTRAINT `idnavigationforshortestpath`
    FOREIGN KEY (`idnavigationRequest`)
    REFERENCES `mydb`.`navigationRequest` (`idnavigationRequest`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `pathpointforshortest`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`beacons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`beacons` (
  `idbeacon` INT NOT NULL,
  `coordinatePoint` INT NOT NULL,
  `beaconModel` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `ifwork` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idbeacon`),
  CONSTRAINT `idpointforBeacon`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`adminUser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`adminUser` (
  `idadminUser` INT NOT NULL,
  `name` INT NULL,
  `password` INT NULL,
  PRIMARY KEY (`idadminUser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`deviceBeaconConnection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`deviceBeaconConnection` (
  `idconnection` INT NOT NULL,
  `iddevice` INT NOT NULL,
  `idbeacon` INT NOT NULL,
  `distance` DECIMAL(45) NOT NULL DEFAULT 0,
  `beaconRankbyDist` INT NOT NULL COMMENT 'Here we will add trigger on beaconRankbyDist',
  PRIMARY KEY (`idconnection`),
  INDEX `devicefrom_idx` (`iddevice` ASC),
  INDEX `tobeacon_idx` (`idbeacon` ASC),
  CONSTRAINT `devicefrom`
    FOREIGN KEY (`iddevice`)
    REFERENCES `mydb`.`device` (`iddevice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tobeacon`
    FOREIGN KEY (`idbeacon`)
    REFERENCES `mydb`.`beacons` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`elevatorPath`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`elevatorPath` (
  `idelevatorPath` INT NOT NULL,
  `idnavigationRequest` INT NOT NULL,
  `coordinatePoint` INT NOT NULL,
  PRIMARY KEY (`idelevatorPath`),
  INDEX `pointsforelevatorpath_idx` (`coordinatePoint` ASC),
  CONSTRAINT `idnavigationforelevatorpath`
    FOREIGN KEY (`idnavigationRequest`)
    REFERENCES `mydb`.`navigationRequest` (`idnavigationRequest`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `pointsforelevatorpath`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`stairPath`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`stairPath` (
  `idstairPath` INT NOT NULL,
  `idnavigationRequest` INT NOT NULL,
  `coordinatePoint` INT NOT NULL,
  PRIMARY KEY (`idstairPath`),
  INDEX `pointsforstairpath_idx` (`coordinatePoint` ASC),
  CONSTRAINT `idnavigationforstairpath`
    FOREIGN KEY (`idnavigationRequest`)
    REFERENCES `mydb`.`navigationRequest` (`idnavigationRequest`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `pointsforstairpath`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`navigationComplete`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`navigationComplete` (
  `idnavigationComplete` INT NOT NULL,
  `iscomplete` TINYINT NOT NULL DEFAULT 1,
  `errorMessage` VARCHAR(45) NULL,
  PRIMARY KEY (`idnavigationComplete`),
  CONSTRAINT `completenavigation`
    FOREIGN KEY (`idnavigationComplete`)
    REFERENCES `mydb`.`navigationRequest` (`idnavigationRequest`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
