-- MySQL Script generated by MySQL Workbench
-- Sun Mar 29 02:25:00 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`customer` (
  `idcustomer` INT NOT NULL,
  `userName` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `isdisability` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`idcustomer`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`device`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`device` (
  `iddevice` INT NOT NULL,
  `idcustomer` INT NOT NULL,
  `deviceTpye` VARCHAR(45) NOT NULL,
  `NumConnectionsAvailable` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`iddevice`),
  INDEX `idcustomerOwnDevice_idx` (`idcustomer` ASC),
  CONSTRAINT `idcustomerOwnDevice`
    FOREIGN KEY (`idcustomer`)
    REFERENCES `mydb`.`customer` (`idcustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`building`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`building` (
  `idbuilding` INT NOT NULL COMMENT 'This table will store building information. Like name, address',
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(128) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`idbuilding`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`floorMap`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`floorMap` (
  `idfloorMap` INT NOT NULL COMMENT 'This table will store the excel file for floor data',
  `idbuilding` INT NOT NULL,
  `floorNumber` INT NOT NULL,
  `excelMap` BLOB NOT NULL,
  `ifupdate` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idfloorMap`),
  INDEX `idbuildingIndicateWhichBuilding_idx` (`idbuilding` ASC),
  CONSTRAINT `idbuildingIndicateWhichBuilding`
    FOREIGN KEY (`idbuilding`)
    REFERENCES `mydb`.`building` (`idbuilding`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`floorMapPoints`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`floorMapPoints` (
  `coordinatePoint` INT NOT NULL COMMENT 'This table will store the points in one floor map',
  `idfloorMap` INT NOT NULL,
  `x` DECIMAL(45) NOT NULL,
  `y` DECIMAL(45) NOT NULL,
  `ifpassable` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`coordinatePoint`),
  INDEX `idpointsBelongtoWhichFloor_idx` (`idfloorMap` ASC),
  CONSTRAINT `idpointsBelongtoWhichFloor`
    FOREIGN KEY (`idfloorMap`)
    REFERENCES `mydb`.`floorMap` (`idfloorMap`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`locationToVisit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`locationToVisit` (
  `idlocationToVisiti` INT NOT NULL,
  `coordinatePoint` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`idlocationToVisiti`),
  INDEX `coordinatePoint_idx` (`coordinatePoint` ASC),
  CONSTRAINT `coordinatePoint`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`navigationRequest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`navigationRequest` (
  `idnavigationRequest` INT NOT NULL,
  `iddevice` INT NOT NULL,
  `idlocationToVisit` INT NOT NULL COMMENT 'This is actually the destination that user input',
  `ifcomplete` TINYINT NOT NULL DEFAULT 0,
  `ifdifferentFloor` TINYINT NOT NULL DEFAULT 0 COMMENT 'This attribute will be change while “positioning” process happen',
  `strategy` VARCHAR(45) NOT NULL,
  `recommendation` VARCHAR(45) NULL,
  PRIMARY KEY (`idnavigationRequest`),
  INDEX `idDestination_idx` (`idlocationToVisit` ASC),
  INDEX `idforDevice_idx` (`iddevice` ASC),
  CONSTRAINT `idforDevice`
    FOREIGN KEY (`iddevice`)
    REFERENCES `mydb`.`device` (`iddevice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idDestination`
    FOREIGN KEY (`idlocationToVisit`)
    REFERENCES `mydb`.`locationToVisit` (`idlocationToVisiti`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`deviceCurrentPosition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`deviceCurrentPosition` (
  `iddevice` INT NOT NULL,
  `coordinatePoint` INT NOT NULL,
  INDEX `iddevice_idx` (`iddevice` ASC),
  PRIMARY KEY (`iddevice`),
  INDEX `calculatedPoint_idx` (`coordinatePoint` ASC),
  CONSTRAINT `iddevice`
    FOREIGN KEY (`iddevice`)
    REFERENCES `mydb`.`device` (`iddevice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `calculatedPoint`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`beacons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`beacons` (
  `idbeacon` INT NOT NULL,
  `coordinatePoint` INT NOT NULL,
  `beaconModel` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `ifwork` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idbeacon`),
  CONSTRAINT `idpointforBeacon`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`adminUser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`adminUser` (
  `idadminUser` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`idadminUser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`deviceBeaconConnection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`deviceBeaconConnection` (
  `idconnection` INT NOT NULL,
  `iddevice` INT NOT NULL,
  `idbeacon` INT NOT NULL,
  `distance` DECIMAL(45) NOT NULL DEFAULT 0,
  `beaconRankbyDist` INT NOT NULL DEFAULT 0 COMMENT 'Here we will add trigger on beaconRankbyDist',
  PRIMARY KEY (`idconnection`),
  INDEX `devicefrom_idx` (`iddevice` ASC),
  INDEX `tobeacon_idx` (`idbeacon` ASC),
  CONSTRAINT `devicefrom`
    FOREIGN KEY (`iddevice`)
    REFERENCES `mydb`.`device` (`iddevice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tobeacon`
    FOREIGN KEY (`idbeacon`)
    REFERENCES `mydb`.`beacons` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`navigationComplete`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`navigationComplete` (
  `idnavigationComplete` INT NOT NULL,
  `iscomplete` TINYINT NOT NULL DEFAULT 1,
  `errorMessage` VARCHAR(45) NULL,
  PRIMARY KEY (`idnavigationComplete`),
  CONSTRAINT `completenavigation`
    FOREIGN KEY (`idnavigationComplete`)
    REFERENCES `mydb`.`navigationRequest` (`idnavigationRequest`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`locationToChangeFloor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`locationToChangeFloor` (
  `idlocationToChangeFloor` INT NOT NULL COMMENT 'This table should store the location of equipment, which can help human move to one floor from another.',
  `coordinatePoint` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `isdisabilityFriendly` TINYINT NOT NULL DEFAULT 0,
  `timeCost` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idlocationToChangeFloor`),
  INDEX `pointforfloorchangelocation_idx` (`coordinatePoint` ASC),
  CONSTRAINT `pointforfloorchangelocation`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`singleFloorPath`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`singleFloorPath` (
  `idsingleFloorPath` INT NOT NULL,
  `idnavigationRequest` INT NOT NULL,
  `totalTimeCost` INT NOT NULL,
  PRIMARY KEY (`idsingleFloorPath`),
  INDEX `idnavigationrequestforsingle_idx` (`idnavigationRequest` ASC),
  CONSTRAINT `idnavigationrequestforsingle`
    FOREIGN KEY (`idnavigationRequest`)
    REFERENCES `mydb`.`navigationRequest` (`idnavigationRequest`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`floorAlongtheWay`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`floorAlongtheWay` (
  `idfloorAlongtheWay` INT NOT NULL,
  `idnavigationRequest` INT NOT NULL,
  `idfloorMap` INT NOT NULL,
  `navigationOrder` INT NOT NULL,
  PRIMARY KEY (`idfloorAlongtheWay`),
  INDEX `idnavigationrforalongtheway_idx` (`idnavigationRequest` ASC),
  INDEX `idfloorforalongtheway_idx` (`idfloorMap` ASC),
  CONSTRAINT `idfloorforalongtheway`
    FOREIGN KEY (`idfloorMap`)
    REFERENCES `mydb`.`floorMap` (`idfloorMap`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idnavigationrforalongtheway`
    FOREIGN KEY (`idnavigationRequest`)
    REFERENCES `mydb`.`navigationRequest` (`idnavigationRequest`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`floorPathCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`floorPathCollection` (
  `idfloorPathCollection` INT NOT NULL COMMENT 'This table will store the path collection that can navigate user to the destination',
  `idfloorAlongtheWay` INT NOT NULL,
  `pathCollectionTimeCost` INT NOT NULL,
  PRIMARY KEY (`idfloorPathCollection`),
  INDEX `pathforaparticularfloor_idx` (`idfloorAlongtheWay` ASC),
  CONSTRAINT `pathforaparticularfloor`
    FOREIGN KEY (`idfloorAlongtheWay`)
    REFERENCES `mydb`.`floorAlongtheWay` (`idfloorAlongtheWay`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`singleFloorPathPoints`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`singleFloorPathPoints` (
  `idsingleFloorPathPoints` INT NOT NULL,
  `coordinatePoint` INT NOT NULL,
  `idsingleFloorPath` INT NOT NULL,
  PRIMARY KEY (`idsingleFloorPathPoints`),
  INDEX `idcoordinatePoint_idx` (`coordinatePoint` ASC),
  INDEX `idsinglefloorpathforpoints_idx` (`idsingleFloorPath` ASC),
  CONSTRAINT `idcoordinatePoint`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idsinglefloorpathforpoints`
    FOREIGN KEY (`idsingleFloorPath`)
    REFERENCES `mydb`.`singleFloorPath` (`idsingleFloorPath`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`floorPath`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`floorPath` (
  `idfloorPath` INT NOT NULL,
  `idfloorPathCollection` INT NOT NULL,
  `coordinatePoint` INT NOT NULL,
  PRIMARY KEY (`idfloorPath`),
  INDEX `idpathcollection_idx` (`idfloorPathCollection` ASC),
  INDEX `coordinatepointforfloorpath_idx` (`coordinatePoint` ASC),
  CONSTRAINT `idpathcollection`
    FOREIGN KEY (`idfloorPathCollection`)
    REFERENCES `mydb`.`floorPathCollection` (`idfloorPathCollection`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `coordinatepointforfloorpath`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMapPoints` (`coordinatePoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
