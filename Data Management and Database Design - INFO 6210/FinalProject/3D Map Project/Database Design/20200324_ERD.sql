-- MySQL Script generated by MySQL Workbench
-- Tue Mar 24 15:42:16 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`building`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`building` (
  `idbuilding` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `address` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`idbuilding`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`floor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`floor` (
  `idfloor` INT NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `idbuilding` INT NOT NULL,
  PRIMARY KEY (`idfloor`),
  INDEX `idbuilding_idx` (`idbuilding` ASC),
  CONSTRAINT `idbuilding`
    FOREIGN KEY (`idbuilding`)
    REFERENCES `mydb`.`building` (`idbuilding`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`floorMap`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`floorMap` (
  `idpoint` INT NOT NULL,
  `x` DECIMAL(45) NOT NULL,
  `y` DECIMAL(45) NOT NULL,
  `pointTpye` VARCHAR(45) NOT NULL DEFAULT 'Indicate what it is, like room, stair, etc',
  `idfloor` INT NOT NULL,
  PRIMARY KEY (`idpoint`),
  INDEX `idFloor_idx` (`idfloor` ASC),
  CONSTRAINT `idFloor`
    FOREIGN KEY (`idfloor`)
    REFERENCES `mydb`.`floor` (`idfloor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`location` (
  `idlocation` INT NOT NULL,
  `idfloor` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `coordinatePoint` INT NOT NULL,
  PRIMARY KEY (`idlocation`),
  INDEX `coordinatePoint_idx` (`coordinatePoint` ASC),
  CONSTRAINT `coordinatePoint`
    FOREIGN KEY (`coordinatePoint`)
    REFERENCES `mydb`.`floorMap` (`idpoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`position`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`position` (
  `idposition` INT NOT NULL,
  `x` DECIMAL(45) NOT NULL,
  `y` DECIMAL(45) NOT NULL,
  `fidfloor` INT NOT NULL,
  `iddevice` INT NOT NULL,
  PRIMARY KEY (`idposition`),
  INDEX `idfloor_idx` (`fidfloor` ASC),
  INDEX `iddevice_idx` (`iddevice` ASC),
  CONSTRAINT `fidfloor`
    FOREIGN KEY (`fidfloor`)
    REFERENCES `mydb`.`floor` (`idfloor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `iddevice`
    FOREIGN KEY (`iddevice`)
    REFERENCES `mydb`.`device` (`iddevice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`checkPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`checkPoint` (
  `idcheckingPoint` INT NOT NULL,
  `sourceLocation` INT NOT NULL,
  `targetLocation` INT NOT NULL,
  `mode` VARCHAR(45) NOT NULL,
  `idPath` INT NULL,
  PRIMARY KEY (`idcheckingPoint`),
  INDEX `targetLocation_idx` (`targetLocation` ASC),
  INDEX `sourceLocation_idx` (`sourceLocation` ASC),
  CONSTRAINT `sourceLocation`
    FOREIGN KEY (`sourceLocation`)
    REFERENCES `mydb`.`position` (`idposition`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `targetLocation`
    FOREIGN KEY (`targetLocation`)
    REFERENCES `mydb`.`location` (`idlocation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`paths`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`paths` (
  `idpaths` INT NOT NULL,
  `sourceLocation` INT NOT NULL,
  `targetLocation` INT NOT NULL,
  PRIMARY KEY (`idpaths`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`navigationRequest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`navigationRequest` (
  `idnavigationRequest` INT NOT NULL,
  `userSourceLocation` INT NOT NULL,
  `userTargetLocation` INT NOT NULL,
  `ifDifferentFloor` INT NOT NULL,
  `checkPoint` INT NULL,
  `mode` VARCHAR(45) NOT NULL,
  `UserIdPaths` INT NOT NULL,
  PRIMARY KEY (`idnavigationRequest`),
  INDEX `targetLocation_idx` (`userTargetLocation` ASC),
  INDEX `checkingPoint_idx` (`checkPoint` ASC),
  INDEX `sourceLocation_idx` (`userSourceLocation` ASC),
  INDEX `idPath_idx` (`UserIdPaths` ASC),
  CONSTRAINT `UserTargetLocation`
    FOREIGN KEY (`userTargetLocation`)
    REFERENCES `mydb`.`location` (`idlocation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `checkingPoint`
    FOREIGN KEY (`checkPoint`)
    REFERENCES `mydb`.`checkPoint` (`idcheckingPoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `UserSourceLocation`
    FOREIGN KEY (`userSourceLocation`)
    REFERENCES `mydb`.`position` (`idposition`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `UserIdPath`
    FOREIGN KEY (`UserIdPaths`)
    REFERENCES `mydb`.`paths` (`idpaths`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`device`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`device` (
  `iddevice` INT NOT NULL,
  `idrequest` INT NOT NULL,
  `deviceTpye` VARCHAR(45) NOT NULL,
  `isconnected` TINYINT NOT NULL,
  PRIMARY KEY (`iddevice`),
  INDEX `idrequest_idx` (`idrequest` ASC),
  CONSTRAINT `idrequest`
    FOREIGN KEY (`idrequest`)
    REFERENCES `mydb`.`navigationRequest` (`idnavigationRequest`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`path`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`path` (
  `idPoints` INT NOT NULL,
  `x` DECIMAL(45) NOT NULL,
  `y` DECIMAL(45) NOT NULL,
  `idpaths` INT NOT NULL,
  PRIMARY KEY (`idPoints`),
  INDEX `idpaths_idx` (`idpaths` ASC),
  CONSTRAINT `idPaths`
    FOREIGN KEY (`idpaths`)
    REFERENCES `mydb`.`paths` (`idpaths`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`bluetoothBeacon(real-time udpate)`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`bluetoothBeacon(real-time udpate)` (
  `idbluetoothBeacon` INT NOT NULL,
  `x` INT NULL,
  `y` INT NULL,
  PRIMARY KEY (`idbluetoothBeacon`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`requestComplete`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`requestComplete` (
  `idrequestComplete` INT NOT NULL,
  `UserIdDevice` INT NOT NULL,
  `UserIdNavigationRequest` INT NOT NULL,
  `ifComplete` TINYINT NOT NULL,
  PRIMARY KEY (`idrequestComplete`),
  INDEX `idDevice_idx` (`UserIdDevice` ASC),
  INDEX `idNavigationRequest_idx` (`UserIdNavigationRequest` ASC),
  CONSTRAINT `UserIdDevice`
    FOREIGN KEY (`UserIdDevice`)
    REFERENCES `mydb`.`device` (`iddevice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `UserIdNavigationRequest`
    FOREIGN KEY (`UserIdNavigationRequest`)
    REFERENCES `mydb`.`navigationRequest` (`idnavigationRequest`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`originalFloorMap`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`originalFloorMap` (
  `idoriginalFloorMap` INT NOT NULL,
  `excelMap` BLOB NULL,
  `OriginaldBuilding` INT NOT NULL,
  `OriginaldFloor` INT NOT NULL,
  PRIMARY KEY (`idoriginalFloorMap`),
  INDEX `idBuilding_idx` (`OriginaldBuilding` ASC),
  INDEX `idFloor_idx` (`OriginaldFloor` ASC),
  CONSTRAINT `OriginalIdBuilding`
    FOREIGN KEY (`OriginaldBuilding`)
    REFERENCES `mydb`.`building` (`idbuilding`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `OriginaldFloor`
    FOREIGN KEY (`OriginaldFloor`)
    REFERENCES `mydb`.`floor` (`idfloor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`normalUser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`normalUser` (
  `iduser` INT NOT NULL,
  `normalUIddevice` INT NOT NULL,
  `name` INT NOT NULL,
  `password` INT NOT NULL,
  `normalUDefaultSourceLocation` INT NOT NULL,
  `role` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`iduser`),
  INDEX `iddevice_idx` (`normalUIddevice` ASC),
  INDEX `defaultSourceLocation_idx` (`normalUDefaultSourceLocation` ASC),
  CONSTRAINT `normalUIddevice`
    FOREIGN KEY (`normalUIddevice`)
    REFERENCES `mydb`.`device` (`iddevice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `normalUDefaultSourceLocation`
    FOREIGN KEY (`normalUDefaultSourceLocation`)
    REFERENCES `mydb`.`location` (`idlocation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`adminUser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`adminUser` (
  `idadminUser` INT NOT NULL,
  `name` INT NULL,
  `password` INT NULL,
  `role` VARCHAR(45) NULL,
  PRIMARY KEY (`idadminUser`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
