/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces.manageInterfaces;

import business.Car;
import business.CarCatalog;
import business.Manufacturers;
import interfaces.MainFrame;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Brickea
 */
public class ManagePanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePanel
     */
    private JPanel viewPanel;
    private CarCatalog carCatalog;
    private CarCatalog tempCatalog;
    private int currentManage = 0;  // 0:all 1:expired
    private MainFrame mainFrame;
    private Manufacturers m;

    public ManagePanel() {
        initComponents();
    }

    public ManagePanel(JPanel viewPanel, CarCatalog carCatalog, MainFrame mainFrame) {
        initComponents();
        this.viewPanel = viewPanel;
        this.carCatalog = carCatalog;
        this.mainFrame = mainFrame;

        this.updateLastTime(); // show the last update time of catalog
        this.manageAllCars();// show all car in table
        this.initM();
    }
    
    private void initM(){
        m = new Manufacturers();
        m.addCompanyName("Toyota");
        m.addCompanyName("GM");
    }

    private void manageAllCars() {
        this.currentManage = 0;
        this.tempCatalog = new CarCatalog();
        for (Car c : this.carCatalog.getCarCatalog()) {
            this.tempCatalog.addCar(c);
        }
        this.populate();
    }

    private void manageExpiredCars() {
        this.currentManage = 1;
        this.tempCatalog = new CarCatalog();
        for (Car c : this.carCatalog.getCarCatalog()) {
            if (!c.isCarCertification()) {
                this.tempCatalog.addCar(c);
            }
        }
        this.populate();
    }

    private void deleteCar(Car c) {
        this.carCatalog.deleteCar(c);
        this.tempCatalog.deleteCar(c);
    }

    private void updateLastTime() {
        this.lastUpdateTime.setText("Last update time:" + this.carCatalog.getUpdateTime());
    }

    private void populate() {
        DefaultTableModel dtm = (DefaultTableModel) this.carTable.getModel();
        dtm.setRowCount(0);

        for (Car c : this.tempCatalog.getCarCatalog()) {
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = c;
            row[1] = c.getCarCity();
            if (c.isCarCertification()) {
                row[2] = "Not Expired";
            } else {
                row[2] = "Expired";
            }

            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        carTable = new javax.swing.JTable();
        lastUpdateTime = new javax.swing.JLabel();
        seriesNumberText = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        carInCityBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        cityCombo = new javax.swing.JComboBox<>();
        allCarsBtn = new javax.swing.JButton();
        allExpiredCarBtn = new javax.swing.JButton();
        uberUsedBtn = new javax.swing.JButton();
        addCarBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        detialBtn = new javax.swing.JButton();

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel1.setText("Manage Cars");

        carTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Series Number", "City", "Expired"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(carTable);
        if (carTable.getColumnModel().getColumnCount() > 0) {
            carTable.getColumnModel().getColumn(0).setResizable(false);
            carTable.getColumnModel().getColumn(1).setResizable(false);
            carTable.getColumnModel().getColumn(2).setResizable(false);
        }

        lastUpdateTime.setText("Last update time:yyyy-MM-dd hh:mm:ss");

        seriesNumberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seriesNumberTextActionPerformed(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        carInCityBtn.setText("Cars in City");
        carInCityBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carInCityBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        cityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "New York" }));

        allCarsBtn.setText("All Cars");
        allCarsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allCarsBtnActionPerformed(evt);
            }
        });

        allExpiredCarBtn.setText("All expired Cars");
        allExpiredCarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allExpiredCarBtnActionPerformed(evt);
            }
        });

        uberUsedBtn.setText("Uber Used Cars");
        uberUsedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uberUsedBtnActionPerformed(evt);
            }
        });

        addCarBtn.setText("Add Car");
        addCarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCarBtnActionPerformed(evt);
            }
        });

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        detialBtn.setText("Detial");
        detialBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detialBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lastUpdateTime))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(seriesNumberText)
                            .addComponent(cityCombo, 0, 342, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(uberUsedBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(allExpiredCarBtn))
                            .addComponent(detialBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(refreshBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCarBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(allCarsBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(carInCityBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lastUpdateTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(seriesNumberText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cityCombo)
                    .addComponent(carInCityBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(detialBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(refreshBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allCarsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(allExpiredCarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(uberUsedBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.mainFrame.enableManageBtn();
        this.viewPanel.remove(this);
        CardLayout layout = (CardLayout) this.viewPanel.getLayout();
        layout.previous(this.viewPanel);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addCarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCarBtnActionPerformed
        // TODO add your handling code here:
        AddPanel p = new AddPanel(this.viewPanel, this.carCatalog);
        this.viewPanel.add("addPanel", p);
        CardLayout layout = (CardLayout) this.viewPanel.getLayout();
        layout.next(this.viewPanel);
    }//GEN-LAST:event_addCarBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        if (this.currentManage == 0) {
            this.manageAllCars();
        } else {
            this.manageExpiredCars();
        }
        this.updateLastTime();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.carTable.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Car c = (Car) this.carTable.getValueAt(selectedRow, 0);
                this.deleteCar(c);
                this.populate();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void allCarsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allCarsBtnActionPerformed
        // TODO add your handling code here:
        this.manageAllCars();
    }//GEN-LAST:event_allCarsBtnActionPerformed

    private void allExpiredCarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allExpiredCarBtnActionPerformed
        // TODO add your handling code here:
        this.manageExpiredCars();
    }//GEN-LAST:event_allExpiredCarBtnActionPerformed

    private void seriesNumberTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seriesNumberTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seriesNumberTextActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        int seriesNumber = Integer.parseInt(this.seriesNumberText.getText());
        Car searchCar = this.carCatalog.searchCar(seriesNumber);
        if (searchCar != null) {
            SearchPanel p = new SearchPanel(this.viewPanel, searchCar, this.carCatalog);
            this.viewPanel.add("searchPanel", p);
            CardLayout layout = (CardLayout) this.viewPanel.getLayout();
            layout.next(this.viewPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Nothing found!");
        }
        this.seriesNumberText.setText("");
    }//GEN-LAST:event_searchBtnActionPerformed

    private void detialBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detialBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.carTable.getSelectedRow();
        if (selectedRow >= 0) {
            SearchPanel p = new SearchPanel(this.viewPanel, (Car) this.carTable.getValueAt(selectedRow, 0), this.carCatalog);
            this.viewPanel.add("searchPanel", p);
            CardLayout layout = (CardLayout) this.viewPanel.getLayout();
            layout.next(this.viewPanel);
        }else{
            JOptionPane.showMessageDialog(null, "Please select one row!");
        }
    }//GEN-LAST:event_detialBtnActionPerformed

    private void carInCityBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carInCityBtnActionPerformed
        // TODO add your handling code here:
        String city = (String) this.cityCombo.getSelectedItem();

        DefaultTableModel dtm = (DefaultTableModel) this.carTable.getModel();
        dtm.setRowCount(0);

        for (Car c : this.tempCatalog.getCarCatalog()) {
            if (c.getCarCity().equals(city)) {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = c;
                row[1] = c.getCarCity();
                if (c.isCarCertification()) {
                    row[2] = "Not Expired";
                } else {
                    row[2] = "Expired";
                }

                dtm.addRow(row);
            }

        }
    }//GEN-LAST:event_carInCityBtnActionPerformed

    private void uberUsedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uberUsedBtnActionPerformed
        // TODO add your handling code here:
        ManufacturersPanel p = new ManufacturersPanel(this.viewPanel, this.m);
        this.viewPanel.add("addPanel", p);
        CardLayout layout = (CardLayout) this.viewPanel.getLayout();
        layout.next(this.viewPanel);
    }//GEN-LAST:event_uberUsedBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCarBtn;
    private javax.swing.JButton allCarsBtn;
    private javax.swing.JButton allExpiredCarBtn;
    private javax.swing.JButton carInCityBtn;
    private javax.swing.JTable carTable;
    private javax.swing.JComboBox<String> cityCombo;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton detialBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastUpdateTime;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField seriesNumberText;
    private javax.swing.JButton uberUsedBtn;
    // End of variables declaration//GEN-END:variables

}
